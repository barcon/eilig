# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=pythoncl
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq ($(shell echo "test"), "test")
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = gcc
endif
ifeq ($(origin CXX), default)
  CXX = g++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
RESCOMP = windres
TARGETDIR = PythonCL
TARGET = $(TARGETDIR)/_eiligCL.pyd
OBJDIR = obj/_PythonCL
DEFINES += -DNDEBUG -DEILIG_ENABLE_OPENCL
INCLUDES += -I../../utils/src -I../../logger/src -I../../club/src -I../../opencl/inc -I../../python/inc
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O3
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O3 -std=c++17
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS += -lutils -llogger -lclub -lopencl -lpython312
LDDEPS +=
ALL_LDFLAGS += $(LDFLAGS) -L../../utils/build/Release -L../../logger/build/Release -L../../club/build/Release -L../../opencl/lib/x86_64 -L../../python/lib -L/usr/lib64 -m64 -shared -Wl,--out-implib="PythonCL/_eiligCL.lib" -s
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/eilig_export_python_OpenCL.o
GENERATED += $(OBJDIR)/eilig_matrix.o
GENERATED += $(OBJDIR)/eilig_matrix_ellpack.o
GENERATED += $(OBJDIR)/eilig_opencl_entry_proxy.o
GENERATED += $(OBJDIR)/eilig_opencl_kernels.o
GENERATED += $(OBJDIR)/eilig_opencl_matrix_ellpack.o
GENERATED += $(OBJDIR)/eilig_opencl_vector.o
GENERATED += $(OBJDIR)/eilig_routines.o
GENERATED += $(OBJDIR)/eilig_transform.o
GENERATED += $(OBJDIR)/eilig_vector.o
OBJECTS += $(OBJDIR)/eilig_export_python_OpenCL.o
OBJECTS += $(OBJDIR)/eilig_matrix.o
OBJECTS += $(OBJDIR)/eilig_matrix_ellpack.o
OBJECTS += $(OBJDIR)/eilig_opencl_entry_proxy.o
OBJECTS += $(OBJDIR)/eilig_opencl_kernels.o
OBJECTS += $(OBJDIR)/eilig_opencl_matrix_ellpack.o
OBJECTS += $(OBJDIR)/eilig_opencl_vector.o
OBJECTS += $(OBJDIR)/eilig_routines.o
OBJECTS += $(OBJDIR)/eilig_transform.o
OBJECTS += $(OBJDIR)/eilig_vector.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking eilig_pythonCL
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning eilig_pythonCL
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/eilig_export_python_OpenCL.o: ../src/eilig_export_python_OpenCL.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/eilig_matrix.o: ../src/eilig_matrix.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/eilig_matrix_ellpack.o: ../src/eilig_matrix_ellpack.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/eilig_opencl_entry_proxy.o: ../src/eilig_opencl_entry_proxy.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/eilig_opencl_kernels.o: ../src/eilig_opencl_kernels.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/eilig_opencl_matrix_ellpack.o: ../src/eilig_opencl_matrix_ellpack.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/eilig_opencl_vector.o: ../src/eilig_opencl_vector.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/eilig_routines.o: ../src/eilig_routines.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/eilig_transform.o: ../src/eilig_transform.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/eilig_vector.o: ../src/eilig_vector.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif